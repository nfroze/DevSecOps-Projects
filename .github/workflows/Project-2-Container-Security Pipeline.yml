name: Project2-Container-Security-Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "Project-2-Container-Security/**"  # Trigger on changes to the Project-2-Container-Security folder
      - "!Project-2-Container-Security/README.md"  # Exclude README.md from triggering the pipeline
  pull_request:
    branches:
      - main
    paths:
      - "Project-2-Container-Security/**"  # Trigger on changes to the Project-2-Container-Security folder
      - "!Project-2-Container-Security/README.md"  # Exclude README.md from triggering the pipeline

jobs:
  build-scan-push:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Build Docker image
      - name: Build Docker Image
        working-directory: ./Project-2-Container-Security
        run: docker build -t nfroze/project-2-secure-app:latest .

      # Step 3: Install Trivy for vulnerability scanning
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      # Step 4: Scan Docker image with Trivy for high and critical vulnerabilities
      - name: Scan Docker Image with Trivy
        run: trivy image --exit-code 1 --severity HIGH,CRITICAL nfroze/project-2-secure-app:latest

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # Step 6: Tag Docker image
      - name: Tag Docker Image
        run: docker tag nfroze/project-2-secure-app:latest ${{ secrets.DOCKERHUB_USERNAME }}/project-2-secure-app:latest

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/project-2-secure-app:latest

  ecs-update:
    name: Update ECS Service with New Docker Image
    runs-on: ubuntu-latest
    needs: build-scan-push  # Only run after build-scan-push job is successful
    steps:
      # Step 1: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 2: Update ECS service with the latest Docker image from Docker Hub
      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster Project-2-Container-Security --service Project-2-Container-Security --force-new-deployment